[tool.poetry]
name = "referral-system"
version = "0.1.0"
description = "Referral System"
authors = ["kioharu"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "3.11.*"
django = "5.2"
djangorestframework = "3.16.0"
psycopg = { extras = ["c"], version = "3.2.4" }
gunicorn = { extras = ["gevent"], version = "23.0.0" }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "*"
isort = "*"
pre-commit = "*"
pyright = { extras = ["nodejs"], version = "*" }
ruff = "*"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
atomic = true
profile = "black"
py_version = 311
line_length = 88
skip_gitignore = true
multi_line_output = 3

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "E",    # pycodestyle
    "W",    # pycodestyle
    "C90",  # mccabe
    "I",    # isort
    "N",    # pep8-naming
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "EM",   # flake8-errmsg
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PT",   # flake8-pytest-style
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TC",   # flake8-type-checking
    "PTH",  # flake8-use-pathlib
    "PGH",  # pygrep-hooks
    "PL",   # Pylint
    "TRY",  # tryceratops
    "PERF", # Perflint
    "FURB", # refurb
    "DJ",   # Django
]
exclude = ["migrations"]

[tool.pyright]
typeCheckingMode = "standard"
pythonVersion = "3.11"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
